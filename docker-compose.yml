version: '3.8'

services:
  # Laravel 应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-links-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=laravel_links
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

  # Nginx Web 服务器
  nginx:
    image: nginx:alpine
    container_name: laravel-links-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites-available:/etc/nginx/sites-available:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - laravel-network

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: laravel-links-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_links
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secure_password
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "3306:3306"
    networks:
      - laravel-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: laravel-links-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  # Laravel 队列工作进程
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-links-queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=laravel_links
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

  # Laravel 任务调度
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-links-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    command: sh -c "while true; do php artisan schedule:run; sleep 60; done"
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=laravel_links
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

  # Elasticsearch (可选 - 用于搜索功能)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: laravel-links-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - laravel-network
    profiles:
      - search

  # Kibana (可选 - 用于日志分析)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: laravel-links-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - laravel-network
    profiles:
      - search

  # Prometheus 监控 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: laravel-links-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - laravel-network
    profiles:
      - monitoring

  # Grafana 仪表板 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: laravel-links-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - laravel-network
    profiles:
      - monitoring

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# 网络
networks:
  laravel-network:
    driver: bridge